<?php
/**
 * @file
 * Install, update and uninstall functions for the cfdr module.
 */ 
 
/**
 * Implementation of hook_schema().
 */
function cfdr_schema() {
  $schema['cfdr'] = array(
    'description' => 'Stores CFDs received as file path; and also both RFCs, date, series, and number (folio)',
    'fields' => array(
      'cfdr_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => "The cfdr id",
      ),
      'serie' => array(
        'type' => 'varchar',
        'length' => '10',
        'not null' => FALSE,
        'description' => "cfd's series (letters)",      
      ),
      'folio' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'description' => "cfd's number",
      ),
      'no_aprobacion' => array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'description' => "folio approval number",
      ),
      'ano_aprobacion' => array(
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'description' => "folio approval year",
      ),
      'emisor_rfc' => array(
        'type' => 'varchar',
        'length' => '13',
        'not null' => FALSE,
        'description' => "Emitting party's RFC",
      ),
      'emisor_nombre' => array(
        'type' => 'text',
        'size' => 'tiny',
        'not null' => FALSE,
        'description' => "Emitting party's name",
      ),
      'receptor_rfc' => array(
        'type' => 'varchar',
        'length' => '13',
        'not null' => FALSE,
        'description' => "Receiving party's RFC",
      ),
      'fecha_cfd' => array(
        'mysql_type' => 'DATETIME',
        'pgsql_type' => 'timestamp without time zone',
        'not null' => FALSE,
        'description' => 'Date of the CFD',
      ),
      'importe' => array(
        'type' => 'numeric',
        'precision' => 9,
        'scale' => 2,
        'unsigned' => FALSE,
        'not null' => FALSE,
        'description' => 'Total amount of the CFD',
      ),
      'no_certificado' => array(
        'type' => 'varchar',
        'length' => '20',
        'not null' => FALSE,
        'description' => "Certificate's (CSD) number",
      ),
      'xml_filename' => array(
        'type' => 'varchar',
        'length' => '510',
        'not null' => TRUE,
        'description' => 'The full filename of the XML file',
      ),
      'validstatus_xml' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => 'true',
        'not null' => FALSE,
        'description' => "Stores the validity status of the CFD's XML structure. NULL means it is not validated yet",
      ),
      'validstatus_sellos' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => 'true',
        'not null' => FALSE,
        'description' => "Stores the validity status of the CFD's sello. NULL means it is not validated yet",
      ),
      'validstatus_cert' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => 'true',
        'not null' => FALSE,
        'description' => "Stores the validity status of the CFD's certificate. NULL means it is not validated yet",
      ),
      'validstatus_folio' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => 'true',
        'not null' => FALSE,
        'description' => "Stores the validity status of the CFD's foilo. NULL means it is not validated yet",
      ),
      'nav_number' => array(
        'type' => 'int',
        'size' => 'normal',
        'not null' => FALSE,
      ),
      'xml_type' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => 'true',
        'not null' => TRUE,
        'description' => 'Stores whether CFD or CFDI',
      ),
      'cfd_type' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => 'true',
        'not null' => TRUE,
        'description' => 'Stores type of CFD /Comprobante/@tipoDeComprobante (ingreso, egreso, traslado)' ,
      ),
    ),
    'primary key' => array('cfdr_id'),
    'indexes' => array(
      'date' => array('fecha_cfd'),
      'emisor' => array('emisor_rfc'),
      'receptor' => array('receptor_rfc'),
      'validstatus' => array('validstatus_xml', 'validstatus_sellos', 'validstatus_cert', 'validstatus_folio'),
    ),
  );
  $schema['cfdr_fail'] = array(
    'description' => 'Stores XML files which cannot be procesed',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => "The file id",
      ),
      'xml_filename' => array(
        'type' => 'varchar',
        'length' => '510',
        'not null' => TRUE,
        'description' => 'The full filename of the XML file',
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}
